#include "constants.h"

#include "lcbx.h"
#include <libcouchbase/couchbase.h>

namespace couchnode
{

namespace constants
{

static inline void define_constant(Local<Object> target, const char *k, int n)
{
    Nan::DefineOwnProperty(
        target, Nan::New<String>(k).ToLocalChecked(), Nan::New<Number>(n),
        static_cast<v8::PropertyAttribute>(v8::ReadOnly | v8::DontDelete));
}

NAN_MODULE_INIT(Init)
{
#define X(n) define_constant(target, #n, n);
    X(LCB_CNTL_SET)
    X(LCB_CNTL_GET)
    X(LCB_CNTL_OP_TIMEOUT)
    X(LCB_CNTL_DURABILITY_INTERVAL)
    X(LCB_CNTL_DURABILITY_TIMEOUT)
    X(LCB_CNTL_HTTP_TIMEOUT)
    X(LCB_CNTL_N1QL_TIMEOUT)
    X(LCB_CNTL_VIEW_TIMEOUT)
    /** @name CouchbaseBinding.LCB_CNTL_RBUFSIZE */
    /** @name CouchbaseBinding.LCB_CNTL_WBUFSIZE */
    X(LCB_CNTL_CONFIGURATION_TIMEOUT)
    X(LCB_CNTL_VBMAP)
    /** @name CouchbaseBinding.LCB_CNTL_CONFIG_HTTP_NODES */
    /** @name CouchbaseBinding.LCB_CNTL_CONFIG_CCCP_NODES */
    X(LCB_CNTL_CHANGESET)
    /** @name CouchbaseBinding.LCB_CNTL_CONFIG_ALL_NODES */
    X(LCB_CNTL_CONFIGCACHE)
    X(LCB_CNTL_SSL_MODE)
    X(LCB_CNTL_SSL_CACERT)
    X(LCB_CNTL_RETRYMODE)
    X(LCB_CNTL_HTCONFIG_URLTYPE)
    X(LCB_CNTL_COMPRESSION_OPTS)
    X(LCB_CNTL_RDBALLOCFACTORY)
    X(LCB_CNTL_SYNCDESTROY)
    X(LCB_CNTL_CONLOGGER_LEVEL)
    X(LCB_CNTL_DETAILED_ERRCODES)
    X(LCB_CNTL_REINIT_CONNSTR)
    X(LCB_CNTL_CONFDELAY_THRESH)
    /** @name CouchbaseBinding.LCB_CNTL_CONFIG_NODE_TIMEOUT */

    X(LCB_STORE_ADD)
    X(LCB_STORE_REPLACE)
    X(LCB_STORE_SET)
    X(LCB_STORE_APPEND)
    X(LCB_STORE_PREPEND)

    X(LCB_SUCCESS)
    X(LCB_AUTH_CONTINUE)
    X(LCB_AUTH_ERROR)
    X(LCB_DELTA_BADVAL)
    X(LCB_E2BIG)
    X(LCB_EBUSY)
    X(LCB_ENOMEM)
    X(LCB_ERANGE)
    X(LCB_ERROR)
    X(LCB_ETMPFAIL)
    X(LCB_EINVAL)
    X(LCB_CLIENT_ETMPFAIL)
    X(LCB_KEY_EEXISTS)
    X(LCB_KEY_ENOENT)
    X(LCB_DLOPEN_FAILED)
    X(LCB_DLSYM_FAILED)
    X(LCB_NETWORK_ERROR)
    X(LCB_NOT_MY_VBUCKET)
    X(LCB_NOT_STORED)
    X(LCB_NOT_SUPPORTED)
    X(LCB_UNKNOWN_COMMAND)
    X(LCB_UNKNOWN_HOST)
    X(LCB_PROTOCOL_ERROR)
    X(LCB_ETIMEDOUT)
    X(LCB_BUCKET_ENOENT)
    X(LCB_CLIENT_ENOMEM)
    X(LCB_CONNECT_ERROR)
    X(LCB_EBADHANDLE)
    X(LCB_SERVER_BUG)
    X(LCB_PLUGIN_VERSION_MISMATCH)
    X(LCB_INVALID_HOST_FORMAT)
    X(LCB_INVALID_CHAR)
    X(LCB_DURABILITY_ETOOMANY)
    X(LCB_DUPLICATE_COMMANDS)
    X(LCB_EINTERNAL)
    X(LCB_NO_MATCHING_SERVER)
    X(LCB_BAD_ENVIRONMENT)
    X(LCB_BUSY)
    X(LCB_INVALID_USERNAME)
    X(LCB_CONFIG_CACHE_INVALID)
    X(LCB_SASLMECH_UNAVAILABLE)
    X(LCB_TOO_MANY_REDIRECTS)
    X(LCB_MAP_CHANGED)
    X(LCB_INCOMPLETE_PACKET)
    X(LCB_ECONNREFUSED)
    X(LCB_ESOCKSHUTDOWN)
    X(LCB_ECONNRESET)
    X(LCB_ECANTGETPORT)
    X(LCB_EFDLIMITREACHED)
    X(LCB_ENETUNREACH)
    X(LCB_ECTL_UNKNOWN)
    X(LCB_ECTL_UNSUPPMODE)
    X(LCB_ECTL_BADARG)
    X(LCB_EMPTY_KEY)
    X(LCB_SSL_ERROR)
    X(LCB_SSL_CANTVERIFY)
    X(LCB_SCHEDFAIL_INTERNAL)
    X(LCB_CLIENT_FEATURE_UNAVAILABLE)
    X(LCB_OPTIONS_CONFLICT)
    X(LCB_HTTP_ERROR)
    X(LCB_DURABILITY_NO_MUTATION_TOKENS)
    X(LCB_UNKNOWN_MEMCACHED_ERROR)
    X(LCB_MUTATION_LOST)
    X(LCB_SUBDOC_PATH_ENOENT)
    X(LCB_SUBDOC_PATH_MISMATCH)
    X(LCB_SUBDOC_PATH_EINVAL)
    X(LCB_SUBDOC_PATH_E2BIG)
    X(LCB_SUBDOC_DOC_E2DEEP)
    X(LCB_SUBDOC_VALUE_CANTINSERT)
    X(LCB_SUBDOC_DOC_NOTJSON)
    X(LCB_SUBDOC_NUM_ERANGE)
    X(LCB_SUBDOC_BAD_DELTA)
    X(LCB_SUBDOC_PATH_EEXISTS)
    X(LCB_SUBDOC_MULTI_FAILURE)
    X(LCB_SUBDOC_VALUE_E2DEEP)
    X(LCB_EINVAL_MCD)
    X(LCB_EMPTY_PATH)
    X(LCB_UNKNOWN_SDCMD)
    X(LCB_ENO_COMMANDS)
    X(LCB_QUERY_ERROR)
    X(LCB_GENERIC_TMPERR)
    X(LCB_GENERIC_SUBDOCERR)
    X(LCB_GENERIC_CONSTRAINT_ERR)

    X(LCB_HTTP_TYPE_VIEW)
    X(LCB_HTTP_TYPE_MANAGEMENT)
    X(LCB_HTTP_TYPE_RAW)
    X(LCB_HTTP_TYPE_N1QL)
    X(LCB_HTTP_TYPE_FTS)
    X(LCB_HTTP_TYPE_CBAS)
    X(LCB_HTTP_METHOD_GET)
    X(LCB_HTTP_METHOD_POST)
    X(LCB_HTTP_METHOD_PUT)
    X(LCB_HTTP_METHOD_DELETE)

    X(LCB_STORE_SET)
    X(LCB_STORE_ADD)
    X(LCB_STORE_REPLACE)
    X(LCB_STORE_APPEND)
    X(LCB_STORE_PREPEND)

    X(LCBX_SDCMD_GET)
    X(LCBX_SDCMD_EXISTS)
    X(LCBX_SDCMD_REPLACE)
    X(LCBX_SDCMD_DICT_ADD)
    X(LCBX_SDCMD_DICT_UPSERT)
    X(LCBX_SDCMD_ARRAY_ADD_FIRST)
    X(LCBX_SDCMD_ARRAY_ADD_LAST)
    X(LCBX_SDCMD_ARRAY_ADD_UNIQUE)
    X(LCBX_SDCMD_ARRAY_INSERT)
    X(LCBX_SDCMD_REMOVE)
    X(LCBX_SDCMD_COUNTER)
    X(LCBX_SDCMD_GET_COUNT)

    X(LCB_REPLICA_MODE_ANY)
    X(LCB_REPLICA_MODE_ALL)
    X(LCB_REPLICA_MODE_IDX0)
    X(LCB_REPLICA_MODE_IDX1)
    X(LCB_REPLICA_MODE_IDX2)

    X(LCB_DURABILITYLEVEL_NONE)
    X(LCB_DURABILITYLEVEL_MAJORITY)
    X(LCB_DURABILITYLEVEL_MAJORITY_AND_PERSIST_ON_MASTER)
    X(LCB_DURABILITYLEVEL_PERSIST_TO_MAJORITY)

    X(LCBX_SDFLAG_UPSERT_DOC)
    X(LCBX_SDFLAG_INSERT_DOC)
    X(LCBX_SDFLAG_ACCESS_DELETED)

    X(LCB_SUBDOCOPS_F_MKINTERMEDIATES)
    X(LCB_SUBDOCOPS_F_XATTRPATH)
    X(LCB_SUBDOCOPS_F_XATTR_MACROVALUES)
    X(LCB_SUBDOCOPS_F_XATTR_DELETED_OK)

    X(LCB_RESP_F_FINAL)
    X(LCB_RESP_F_CLIENTGEN)
    X(LCB_RESP_F_NMVGEN)
    X(LCB_RESP_F_EXTDATA)
    X(LCB_RESP_F_SDSINGLE)
    X(LCB_RESP_F_ERRINFO)

    X(LCBX_VIEWFLAG_INCLUDEDOCS)

    X(LCBX_N1QLFLAG_PREPCACHE)

    X(LCB_LOG_TRACE)
    X(LCB_LOG_DEBUG)
    X(LCB_LOG_INFO)
    X(LCB_LOG_WARN)
    X(LCB_LOG_ERROR)
    X(LCB_LOG_FATAL)
#undef X
}

} // namespace constants

} // namespace couchnode
